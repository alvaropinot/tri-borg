steps:
# This step builds the container image.
- name: 'gcr.io/cloud-builders/docker'
  id: Build
  args:
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/ariel_${_APPLICATION_NAME}:$SHORT_SHA'
  - './${_APPLICATION_NAME}'

# This step pushes the image to Container Registry
# The PROJECT_ID and SHORT_SHA variables are automatically
# replaced by Cloud Build.
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/ariel_${_APPLICATION_NAME}:$SHORT_SHA'

### Trigger CD 
# This step generates the new manifest
- name: 'gcr.io/cloud-builders/gcloud'
  id: Generate k8s manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    git fetch origin ${_APPLICATION_NAME}/develop && \
    git checkout ${_APPLICATION_NAME}/develop && \
    cd ${_APPLICATION_NAME} && \
    sed "s/{{GOOGLE_CLOUD_PROJECT}}/${PROJECT_ID}/g" kubernetes.template.yaml | \
    sed "s/{{APPLICATION_NAME}}/${_APPLICATION_NAME}/g" | \
    sed "s/{{COMMIT_SHA}}/${SHORT_SHA}/g" > kubernetes.yaml

## PUSH Changes to Git repo
# Decrypt the file containing the key
- name: 'gcr.io/cloud-builders/gcloud'
  id: Decrypt Git key
  args:
  - kms
  - decrypt
  - --ciphertext-file=./crypto-keys/id_rsa.enc
  - --plaintext-file=/root/.ssh/id_rsa
  - --location=global
  - --keyring=ariel-keyring
  - --key=github-key-1
  volumes:
  - name: 'ssh'
    path: /root/.ssh
# Set up git with key and domain.
- name: 'gcr.io/cloud-builders/git'
  id: Setup Git key
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    cd crypto-keys && \
    chmod 600 /root/.ssh/id_rsa
    cat <<EOF >/root/.ssh/config
    Hostname github.com
    IdentityFile /root/.ssh/id_rsa
    EOF
    mv known_hosts /root/.ssh/known_hosts
  volumes:
  - name: 'ssh'
    path: /root/.ssh

# This step pushes the manifest back to tri-borg
# But first need to setup the remote
- name: 'gcr.io/cloud-builders/gcloud'
  id: Push k8s manifest to ${_APPLICATION_NAME}/candidate branch
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    set -x && \
    git remote add github-repo git@github.com:TribalScale/tri-borg.git && \
    git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')
    cd ${_APPLICATION_NAME} && \
    git add kubernetes.yaml && \
    git commit -m "Deploying image gcr.io/${PROJECT_ID}/ariel_${_APPLICATION_NAME}:${SHORT_SHA}
    Built from commit ${COMMIT_SHA} of repository tri-borg
    ::Commit is auto-generated by the CI pipeline::" && \
    # Push kubernetes.yaml from develop to candidate
    git push github-repo ${_APPLICATION_NAME}/develop:${_APPLICATION_NAME}/candidate
  volumes:
  - name: 'ssh'
    path: /root/.ssh